kubectl create namespace demo_app
-A(all) -n(namespece)
kubectl apply -f thing to deploy
kubectl get deployments <deployments_name>
kubectl get pods <pod_name>
kubectl get services <services_name>
kubectl describe pod <pod_name>
kubectl get pvc
kubectl get hpa
kubectl get events
  helm template
helm get manifest
 k delete  -f . -n osher-app
 alias h=helm
alias k=kubectl
alias hh="helm -n osher-app"
hh install nginx-fe nginx-app-0.1.0.tgz
delete hpa
 helm uninstall
 delete horizontalpodautoscaler nginx-deployment-hpa -n osher-app
 delete service nginx-service -n osher-app
 delete persistentvolumeclaim nginx-pvc -n osher-app
hh install nginx-fe nginx-app-0.1.0.tgz
hh install polybot-be polybot-app-0.0.1.tgz
kubectl create secret generic telegram-token --from-literal=TELEGRAM_TOKEN=6648578545:AAFNnFkbsJZOZiRu6TenQ7ufwJedsB_OaEo -n osher-app
 -sO http://192.168.49.1:8080/jnlpJars/agent.jar
java -jar agent.jar -url http://192.168.49.1:8080/ -secret 2a12bb4b3b569372c767f64235efd991e44ceba7e51c305ad187ee1d00930b95 -name "kubernetes clouds" -workDir "/var/lib/jenkins"
kubectl cluster-info --context kind-kind
kubectl create serviceaccount jenkins --namespace=jenkins
kubectl describe secret $(kubectl describe serviceaccount jenkins --namespace=jenkins | grep Token | awk '{print $2}') --namespace=jenkins

kubectl cp /home/oj/Desktop/jenkins_home_backup.tar.gz jenkins/jenkins-5b86677ff-f9lg6:/var/jenkins_home/jenkins_home_backup.tar.gz
tar -xzvf jenkins_backup.tar.gz -C /var/jenkins_home
u/l/b.sh
 export POSTGRES_PASSWORD=$(kubectl get secret --namespace default postgres-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
 kubectl run postgres-postgresql-client --rm --tty -i --restart='Never' --namespace default --image docker.io/bitnami/postgresql:11.7.0-debian-10-r9 --env="PGPASSWORD=$POSTGRES_PASSWORD" --command -- psql --host postgres-postgresql -U postgres -d helm -p 5432
 kubectl port-forward svc/argocd-server -n argocd 8082:443
 ngrok http 10.96.40.71:8005
