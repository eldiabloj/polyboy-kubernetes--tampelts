
kubectl create namespace  <the namespace >

flags=-A(all) -n <the namespace >

kubectl create secret generic telegram-token --from-literal=TELEGRAM_TOKEN=6648578545:AAFNnFkbsJZOZiRu6TenQ7ufwJedsB_OaEo -n osher-app

kubectl cp /yor/path/to/(the/to-the-file)  pod-name/podid:/som/path/on/pod/(the-file)

tar -xzvf jenkins_backup.tar.gz -C /var/jenkins_home

kubectl apply -f <thing to deploy>

kubectl describe pod <pod_name>

kubectl get deployments <deployments_name>

kubectl get pods <pod_name>

kubectl get services <services_name>

kubectl get pvc

kubectl get hpa

kubectl get events

kubectl delete horizontalpodautoscaler nginx-deployment-hpa -n osher-app

kubectl delete service nginx-service -n osher-app

kubectl delete persistentvolumeclaim nginx-pvc -n osher-app

kubectl delete hpa

 alias h=helm

alias k=kubectl

alias hh="helm -n osher-app"



helm template (helm template myrelease ./mychart --values custom-values.yaml)

helm uninstall

helm -n osher-app install nginx-fe nginx-app-0.1.0.tgz

helm -n osher-app install polybot-be polybot-app-0.0.1.tgz



POSTGRES
 export POSTGRES_PASSWORD=$(kubectl get secret --namespace default postgres-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
 kubectl run postgres-postgresql-client --rm --tty -i --restart='Never' --namespace default --image docker.io/bitnami/postgresql:11.7.0-debian-10-r9 --env="PGPASSWORD=$POSTGRES_PASSWORD" --command -- psql --host postgres-postgresql -U postgres -d helm -p 5432
 kubectl port-forward svc/argocd-server -n argocd 8082:443
 kubectl exec -it release-jenkins-0 -n osher-jenkins -- bin/bash



kubectl get all -n osher-pollyapp

kubectl delete pod <pod-name> -n osher-pollyapp
kubectl delete deployment <deployment-name> -n osher-pollyapp
kubectl delete service <service-name> -n osher-pollyapp
or
kubectl delete all --all -n osher-pollyapp

kubectl get configmaps -n osher-pollyappcd

kubectl delete configmap <configmap-name> -n osher-pollyapp

kubectl get secrets -n osher-pollyapp
kubectl delete secret <secret-name> -n osher-pollyapp

kubectl get pvc -n osher-pollyapp
kubectl delete pvc <pvc-name> -n osher-pollyapp

=====
#!/bin/bash

NAMESPACE="osher-pollyapp"

echo "Cleaning up unwanted resources in namespace: $NAMESPACE"

# Delete pods
kubectl delete pods --all -n $NAMESPACE

# Delete deployments
kubectl delete deployments --all -n $NAMESPACE

# Delete services
kubectl delete services --all -n $NAMESPACE

# Delete configmaps and secrets
kubectl delete configmap --all -n $NAMESPACE
kubectl delete secret --all -n $NAMESPACE

# Delete PVCs
kubectl delete pvc --all -n $NAMESPACE

echo "Cleanup completed."

helm uninstall <release-name> -n <your-namespace>
helm list -n <your-namespace>
====



---
// kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: jenkins-agent
                image: eldiabloj/dockerfile_agent:latest
                command:
                - cat
                tty: true
            '''
        }
    }
}
---