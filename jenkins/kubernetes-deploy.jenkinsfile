pipeline {
    agent { label 'osher-ec2-fleet' }


    environment {
        IMG_NAME = "polybot:${BUILD_NUMBER}"
        DOCKER_REGISTRY = "eldiabloj/polybot"
        KUBECONFIG = credentials('kubeSAtoken') // Ensure you have a Kubernetes config credential
        aws_region = "us-east-2"               // Replace with your AWS region
        ecr_registry = 023196572641.dkr.ecr.us-east-2.amazonaws.com/osher-ecr:latest // Replace with your AWS ECR registry
        ecr_repo = "${ecr_registry}/osher-ecr:latest" // Replace with your ECR repository
        image_tag = "latest, polybot"           // Image tag from the build pipeline
        cluster_name = "eks-X10-prod-01"     // Replace with your EKS cluster name
        kubeconfig_path = "~/.kube/config"     // Path to kubeconfig
        namespace = "osher-polyapp"                  // Kubernetes namespace
        sns_topic_arn = "arn:aws:sns:us-east-2:023196572641:osher-polyapp-deployment" // Replace with your SNS Topic ARN
    }
    stages {
        stage('AWS Configure') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                    credentialsId: 'AIDAQKZU7TPQ2NYHX4YLMosher-aws'
                ]]) {
                    script {
                        // Configure AWS CLI with the provided credentials and region
                        sh """
                            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
                            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
                            aws configure set region ${aws_region}
                        """
                    }
                }
            }
        }

    stages {
        stage('Deploy to Kubernetes') {
            steps {
                script {


                    sh "export HELM_DRIVER=configmap && helm install polybot-be /home/oj/PycharmProjects/kubetnetes/polybot-app/polybot-app-0.0.1.tgz -n osher-polyapp  --kubeconfig /home/oj/.kube/config"

                }
            }
        }
    }
}

    post {
        success {
            echo "Deployment to EKS completed successfully."
            sendSNSNotification("SUCCESS", "Deployment to EKS completed successfully for ${env.deployment_name}")
        }
        failure {
            echo "Deployment failed. Check logs for details."
            sendSNSNotification("FAILURE", "Deployment failed for ${env.deployment_name}. Check logs for details.")
        }
    }
}

def sendSNSNotification(status, message) {
    sh """
        aws sns publish \
            --region ${env.aws_region} \
            --topic-arn ${env.sns_topic_arn} \
            --message "Deployment Status: ${status}\\nMessage: ${message}" \
            --subject "Deployment ${status}: ${env.deployment_name}"
    """
}
