pipeline {
    agent {
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: jenkins-agent
                image: eldiabloj/dockerfile_agent:latest
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              - name: docker
                image: docker:dind
                securityContext:
                  privileged: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              - name: jnlp
                image: eldiabloj/dockerfile_agent:latest
                args:
                - -url http://10.101.66.101:8080
              volumes:
              - name: docker-sock
                emptyDir: {}
            '''
        }
    }

    environment {
        IMG_NAME = "polybot:${BUILD_NUMBER}"
        JENKINS_URL = 'http://10.101.66.101:8080'
        DOCKER_REGISTRY = "eldiabloj/polybot"
        KUBECONFIG = credentials('kubeSAtoken')  // Ensure this is correctly set up in Jenkins
    }

    stages {
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    container('jenkins-agent') {
                        sh 'echo "Checking Kubernetes configuration"'
                        sh 'kubectl get pods -n jenkins'
                        sh "export HELM_DRIVER=configmap && helm install nginx-fe /home/oj/PycharmProjects/kubetnetes/nginx-app/nginx-app-0.1.0.tgz -n jenkins --kubeconfig /home/oj/.kube/config"
                    }
                }
            }
        }
    }
}
