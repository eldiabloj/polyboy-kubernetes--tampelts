apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
        - name: TELEGRAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: telegram-token
              key: NjY0ODU3ODU0NTpBQUZObkZrYnNKWk9aaVJ1NlRlblE3dWZ3SmVkc0JfT2FFbw==
        resources:
          requests:
            memory: "{{ .Values.resources.requests.memory }}"
            cpu: "{{ .Values.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.resources.limits.memory }}"
            cpu: "{{ .Values.resources.limits.cpu }}"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "polybot-chart.fullname" . }}
spec:
  ports:
  - port: 90
    targetPort: 90
  selector:
    app: {{ include "polybot-chart.name" . }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "polybot-chart.fullname" . }}-hpa
  namespace: {{ .Values.namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "polybot-chart.fullname" . }}
  minReplicas: {{ .Values.hpa.minReplicas }}
  maxReplicas: {{ .Values.hpa.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.hpa.averageUtilization }}



#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: {{ .Chart.Name }}
#  namespace: {{ .Values.namespace }}
#spec:
#  replicas: {{ .Values.replicas }}
#  selector:
#    matchLabels:
#      app: {{ .Chart.Name }}
#  template:
#    metadata:
#      labels:
#        app: {{ .Chart.Name }}
#    spec:
#      containers:
#      - name: {{ .Chart.Name }}
#        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#        env:
#        - name: TELEGRAM_TOKEN
#          valueFrom:
#            secretKeyRef:
#              name: telegram-token
#              key: TELEGRAM_TOKEN
#        resources:
#          requests:
#            memory: "{{ .Values.resources.requests.memory }}"
#            cpu: "{{ .Values.resources.requests.cpu }}"
#          limits:
#            memory: "{{ .Values.resources.limits.memory }}"
#            cpu: "{{ .Values.resources.limits.cpu }}"
